{
 "Description": "CDK Proyect Stack in Python, Fast API and Lambda",
 "Resources": {
  "MyVPCAFB07A31": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/Resource"
   }
  },
  "MyVPCPublicSubnet1Subnet0C75866A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/Subnet"
   }
  },
  "MyVPCPublicSubnet1RouteTable538A9511": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/RouteTable"
   }
  },
  "MyVPCPublicSubnet1RouteTableAssociation8A950D8E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet1RouteTable538A9511"
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "MyVPCPublicSubnet1DefaultRouteAF81AA9B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet1RouteTable538A9511"
    }
   },
   "DependsOn": [
    "MyVPCVPCGWE6F260E1"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "MyVPCPublicSubnet1EIP5EB6147D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/EIP"
   }
  },
  "MyVPCPublicSubnet1NATGateway838228A5": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVPCPublicSubnet1EIP5EB6147D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVPCPublicSubnet1DefaultRouteAF81AA9B",
    "MyVPCPublicSubnet1RouteTableAssociation8A950D8E"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet1/NATGateway"
   }
  },
  "MyVPCPublicSubnet2Subnet4DDFF14C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet2/Subnet"
   }
  },
  "MyVPCPublicSubnet2RouteTableA6A1CD3D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet2/RouteTable"
   }
  },
  "MyVPCPublicSubnet2RouteTableAssociationF22D63CA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D"
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "MyVPCPublicSubnet2DefaultRoute24460202": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D"
    }
   },
   "DependsOn": [
    "MyVPCVPCGWE6F260E1"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "MyVPCPrivateSubnet1Subnet641543F4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet1/Subnet"
   }
  },
  "MyVPCPrivateSubnet1RouteTable133BD901": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet1/RouteTable"
   }
  },
  "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet1RouteTable133BD901"
    },
    "SubnetId": {
     "Ref": "MyVPCPrivateSubnet1Subnet641543F4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "MyVPCPrivateSubnet1DefaultRouteA8EE6636": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVPCPublicSubnet1NATGateway838228A5"
    },
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet1RouteTable133BD901"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "MyVPCPrivateSubnet2SubnetA420D3F0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet2/Subnet"
   }
  },
  "MyVPCPrivateSubnet2RouteTableDF3CB76C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkProyectStack/MyVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet2/RouteTable"
   }
  },
  "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C"
    },
    "SubnetId": {
     "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "MyVPCPrivateSubnet2DefaultRoute37F90B5D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVPCPublicSubnet1NATGateway838228A5"
    },
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "MyVPCIGW30AB6DD6": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/IGW"
   }
  },
  "MyVPCVPCGWE6F260E1": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/VPCGW"
   }
  },
  "MyVPCRestrictDefaultSecurityGroupCustomResourceC3FF5EE0": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "MyVPCAFB07A31",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "MyVPCAFB07A31",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "MyDatabaseSubnetGroup4D22B380": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for MyDatabase database",
    "SubnetIds": [
     {
      "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
     },
     {
      "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyDatabase/SubnetGroup/Default"
   }
  },
  "MyDatabaseSecurityGroup01753BF2": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MyDatabase database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyDatabase/SecurityGroup/Resource"
   }
  },
  "CdkProyectStackMyDatabaseSecretB1D3B8423fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"administrador\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyDatabase/Secret/Resource"
   }
  },
  "MyDatabaseSecretAttachment995CA799": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "CdkProyectStackMyDatabaseSecretB1D3B8423fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "MyDatabase1E2517DB"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyDatabase/Secret/Attachment/Resource"
   }
  },
  "MyDatabase1E2517DB": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "80",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "mydatabase",
    "DBSubnetGroupName": {
     "Ref": "MyDatabaseSubnetGroup4D22B380"
    },
    "DeletionProtection": false,
    "Engine": "mysql",
    "EngineVersion": "8.0",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "CdkProyectStackMyDatabaseSecretB1D3B8423fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "administrador",
    "Port": "3306",
    "PubliclyAccessible": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "MyDatabaseSecurityGroup01753BF2",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyDatabase/Resource"
   }
  },
  "cdkproyectappdependencies588F07A3": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6feeef770a388f27edeec1b16a275966b6ad25010743ee77458720b6ae38fc78.zip"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/cdk_proyect-app-dependencies/Resource",
    "aws:asset:path": "asset.6feeef770a388f27edeec1b16a275966b6ad25010743ee77458720b6ae38fc78",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "MyFunctionServiceRole3C357FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/ServiceRole/Resource"
   }
  },
  "MyFunctionServiceRoleDefaultPolicyB705ABD4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-2:127355771012:secret:CdkProyectStackMyDatabaseSe-3l4I8PtYITGL-QFObXe"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyFunctionServiceRoleDefaultPolicyB705ABD4",
    "Roles": [
     {
      "Ref": "MyFunctionServiceRole3C357FF2"
     }
    ]
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MyFunctionSecurityGroup5241BB0E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function CdkProyectStackMyFunction7A69CF9F",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/SecurityGroup/Resource"
   }
  },
  "MyFunction3BAA72D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fb0e397f935bd13f4bdc8e7db019dacf424e8b5c8bacf81473cae85b8fd386cb.zip"
    },
    "Environment": {
     "Variables": {
      "DB_HOST": {
       "Fn::GetAtt": [
        "MyDatabase1E2517DB",
        "Endpoint.Address"
       ]
      },
      "DB_NAME": "mydatabase",
      "DB_USER": "administrador",
      "DB_PASSWORD_ARN": {
       "Ref": "MyDatabaseSecretAttachment995CA799"
      },
      "DB_PORT": "3306"
     }
    },
    "Handler": "app.handler",
    "Layers": [
     "arn:aws:lambda:us-east-2:336392948345:layer:AWSSDKPandas-Python310:13",
     {
      "Ref": "cdkproyectappdependencies588F07A3"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "MyFunctionServiceRole3C357FF2",
      "Arn"
     ]
    },
    "Runtime": "python3.10",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "MyFunctionSecurityGroup5241BB0E",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "MyVPCPrivateSubnet1Subnet641543F4"
      },
      {
       "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0"
      }
     ]
    }
   },
   "DependsOn": [
    "MyFunctionServiceRoleDefaultPolicyB705ABD4",
    "MyFunctionServiceRole3C357FF2",
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/Resource",
    "aws:asset:path": "asset.fb0e397f935bd13f4bdc8e7db019dacf424e8b5c8bacf81473cae85b8fd386cb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyFunctionFunctionUrlFF6DE78C": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "Cors": {
     "AllowMethods": [
      "GET",
      "POST"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/FunctionUrl/Resource"
   }
  },
  "MyFunctioninvokefunctionurl171A3163": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyFunction/invoke-function-url"
   }
  },
  "MyApi49610EDF": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MyApi"
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Resource"
   }
  },
  "MyApiDeploymentECB0D05E05e0fd6bf3533ce63b941a73f7df133f": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "DependsOn": [
    "MyApiproxyANYFCF46C66",
    "MyApiproxyE14DBEA4",
    "MyApiANYEC3618D9",
    "MyApicreatedataPOSTC96A0C3E",
    "MyApicreatedata6BA180B7",
    "MyApicreateviewPOSTA7ACF279",
    "MyApicreateview561CBE18",
    "MyApiGETD0C7AA0C",
    "MyApiviewsummaryGET672350FA",
    "MyApiviewsummary6C099022"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Deployment/Resource"
   }
  },
  "MyApiDeploymentStageprodE1054AF0": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "MyApiDeploymentECB0D05E05e0fd6bf3533ce63b941a73f7df133f"
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/DeploymentStage.prod/Resource"
   }
  },
  "MyApiproxyE14DBEA4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/{proxy+}/Resource"
   }
  },
  "MyApiproxyANYApiPermissionCdkProyectStackMyApi02888304ANYproxy81008B84": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/{proxy+}/ANY/ApiPermission.CdkProyectStackMyApi02888304.ANY..{proxy+}"
   }
  },
  "MyApiproxyANYApiPermissionTestCdkProyectStackMyApi02888304ANYproxy0ACFD659": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/{proxy+}/ANY/ApiPermission.Test.CdkProyectStackMyApi02888304.ANY..{proxy+}"
   }
  },
  "MyApiproxyANYFCF46C66": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MyApiproxyE14DBEA4"
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/{proxy+}/ANY/Resource"
   }
  },
  "MyApiANYApiPermissionCdkProyectStackMyApi02888304ANYED22C871": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/ANY/ApiPermission.CdkProyectStackMyApi02888304.ANY.."
   }
  },
  "MyApiANYApiPermissionTestCdkProyectStackMyApi02888304ANY765862A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/ANY/ApiPermission.Test.CdkProyectStackMyApi02888304.ANY.."
   }
  },
  "MyApiANYEC3618D9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/ANY/Resource"
   }
  },
  "MyApiGETApiPermissionCdkProyectStackMyApi02888304GETD450C6C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/GET/ApiPermission.CdkProyectStackMyApi02888304.GET.."
   }
  },
  "MyApiGETApiPermissionTestCdkProyectStackMyApi02888304GETE775AC33": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/GET/ApiPermission.Test.CdkProyectStackMyApi02888304.GET.."
   }
  },
  "MyApiGETD0C7AA0C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/GET/Resource"
   }
  },
  "MyApicreatedata6BA180B7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "PathPart": "create_data",
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_data/Resource"
   }
  },
  "MyApicreatedataPOSTApiPermissionCdkProyectStackMyApi02888304POSTcreatedata6A46E87E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/POST/create_data"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_data/POST/ApiPermission.CdkProyectStackMyApi02888304.POST..create_data"
   }
  },
  "MyApicreatedataPOSTApiPermissionTestCdkProyectStackMyApi02888304POSTcreatedata7C827864": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/POST/create_data"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_data/POST/ApiPermission.Test.CdkProyectStackMyApi02888304.POST..create_data"
   }
  },
  "MyApicreatedataPOSTC96A0C3E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MyApicreatedata6BA180B7"
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_data/POST/Resource"
   }
  },
  "MyApiviewsummary6C099022": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "PathPart": "view_summary",
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/view_summary/Resource"
   }
  },
  "MyApiviewsummaryGETApiPermissionCdkProyectStackMyApi02888304GETviewsummary9FBCDFE9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/GET/view_summary"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/view_summary/GET/ApiPermission.CdkProyectStackMyApi02888304.GET..view_summary"
   }
  },
  "MyApiviewsummaryGETApiPermissionTestCdkProyectStackMyApi02888304GETviewsummary91925FEE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/GET/view_summary"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/view_summary/GET/ApiPermission.Test.CdkProyectStackMyApi02888304.GET..view_summary"
   }
  },
  "MyApiviewsummaryGET672350FA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MyApiviewsummary6C099022"
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/view_summary/GET/Resource"
   }
  },
  "MyApicreateview561CBE18": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyApi49610EDF",
      "RootResourceId"
     ]
    },
    "PathPart": "create_view",
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_view/Resource"
   }
  },
  "MyApicreateviewPOSTApiPermissionCdkProyectStackMyApi02888304POSTcreateviewA4249DF1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/",
       {
        "Ref": "MyApiDeploymentStageprodE1054AF0"
       },
       "/POST/create_view"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_view/POST/ApiPermission.CdkProyectStackMyApi02888304.POST..create_view"
   }
  },
  "MyApicreateviewPOSTApiPermissionTestCdkProyectStackMyApi02888304POSTcreateview23FE4513": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/test-invoke-stage/POST/create_view"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_view/POST/ApiPermission.Test.CdkProyectStackMyApi02888304.POST..create_view"
   }
  },
  "MyApicreateviewPOSTA7ACF279": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MyApicreateview561CBE18"
    },
    "RestApiId": {
     "Ref": "MyApi49610EDF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/MyApi/Default/create_view/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SXW/bMAz8LX1XtKXGfkA+tiJAuxlOl9eCljlHiy0ZItXMMPzfB0m2kw57utORJ55oP8p19kV+foArrVR1WTW6lMORQV0EXOltQPUoh1OnxO6XOeU7kfuy0eroS4MctBsrrGd8hbLBm37TNkRWaWBtzdIcyNdDHuA78BMwXqEXudPvwHi7+GAYncGlISWZThtmUOcWDYsjKu8090/O+i5muBdG4SqSwx4YSiA8GGIwCkWas3j223th7j6icinMfjs7R0FRpRYM1OjkkEaGxgSv4Grku4RLw7+VUTTQlhXI4Rl6dCd0NC3qw/mbN2re4MJn8tM1QZ8gR9dqCq5RUPYGRMgkNwEEZXLr1QV5C4RCQyuHwqbPFjG3jVZxz4mNAjpdp32HhCFpgcSbTkfPRPfYNbafH3p3OjLU6aeIpECy3imM03Nn//SzMt2W+Avy2VZBmthcGUdxM3hi2/7X/7GUO/uuK3RxaFxDCKNNHTw/PHc+pt5ZU2mOW8t7PlvzKZPrtcwefpPWK+cN6xZlkfAv7LUwNjwDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkProyectStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "FunctionUrl": {
   "Value": {
    "Fn::GetAtt": [
     "MyFunctionFunctionUrlFF6DE78C",
     "FunctionUrl"
    ]
   }
  },
  "MyApiEndpoint869ABE96": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyApi49610EDF"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MyApiDeploymentStageprodE1054AF0"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}